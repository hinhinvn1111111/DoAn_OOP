//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DoAnCuoiKi
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class hihiEntities : DbContext
    {
        public hihiEntities()
            : base("name=hihiEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<DiemChuan> DiemChuans { get; set; }
        public virtual DbSet<DiemSan> DiemSans { get; set; }
        public virtual DbSet<DiemThi> DiemThis { get; set; }
        public virtual DbSet<Login> Logins { get; set; }
        public virtual DbSet<MonThi> MonThis { get; set; }
        public virtual DbSet<NamTuyenSinh> NamTuyenSinhs { get; set; }
        public virtual DbSet<Nganh> Nganhs { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<ThiSinh> ThiSinhs { get; set; }
        public virtual DbSet<Truong> Truongs { get; set; }
    
        public virtual ObjectResult<diemthiall_Result> diemthiall()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<diemthiall_Result>("diemthiall");
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<TraDiemChuan_Result> TraDiemChuan(Nullable<int> iD_Truong)
        {
            var iD_TruongParameter = iD_Truong.HasValue ?
                new ObjectParameter("ID_Truong", iD_Truong) :
                new ObjectParameter("ID_Truong", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TraDiemChuan_Result>("TraDiemChuan", iD_TruongParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> TraDiemDia(string sBD)
        {
            var sBDParameter = sBD != null ?
                new ObjectParameter("SBD", sBD) :
                new ObjectParameter("SBD", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("TraDiemDia", sBDParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> TraDiemGDCD(string sBD)
        {
            var sBDParameter = sBD != null ?
                new ObjectParameter("SBD", sBD) :
                new ObjectParameter("SBD", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("TraDiemGDCD", sBDParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> TraDiemHoa(string sBD)
        {
            var sBDParameter = sBD != null ?
                new ObjectParameter("SBD", sBD) :
                new ObjectParameter("SBD", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("TraDiemHoa", sBDParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> TraDiemLy(string sBD)
        {
            var sBDParameter = sBD != null ?
                new ObjectParameter("SBD", sBD) :
                new ObjectParameter("SBD", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("TraDiemLy", sBDParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> TraDiemNgoaiNgu(string sBD)
        {
            var sBDParameter = sBD != null ?
                new ObjectParameter("SBD", sBD) :
                new ObjectParameter("SBD", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("TraDiemNgoaiNgu", sBDParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> TraDiemNguVan(string sBD)
        {
            var sBDParameter = sBD != null ?
                new ObjectParameter("SBD", sBD) :
                new ObjectParameter("SBD", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("TraDiemNguVan", sBDParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> TraDiemSinh(string sBD)
        {
            var sBDParameter = sBD != null ?
                new ObjectParameter("SBD", sBD) :
                new ObjectParameter("SBD", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("TraDiemSinh", sBDParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> TraDiemSu(string sBD)
        {
            var sBDParameter = sBD != null ?
                new ObjectParameter("SBD", sBD) :
                new ObjectParameter("SBD", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("TraDiemSu", sBDParameter);
        }
    
        public virtual ObjectResult<TraDiemThi_Result> TraDiemThi(string sBD)
        {
            var sBDParameter = sBD != null ?
                new ObjectParameter("SBD", sBD) :
                new ObjectParameter("SBD", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TraDiemThi_Result>("TraDiemThi", sBDParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> TraDiemToan(string sBD)
        {
            var sBDParameter = sBD != null ?
                new ObjectParameter("SBD", sBD) :
                new ObjectParameter("SBD", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("TraDiemToan", sBDParameter);
        }
    
        public virtual ObjectResult<DiemChuanTheoNganh_Result> DiemChuanTheoNganh(Nullable<int> iD_Nganh)
        {
            var iD_NganhParameter = iD_Nganh.HasValue ?
                new ObjectParameter("ID_Nganh", iD_Nganh) :
                new ObjectParameter("ID_Nganh", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DiemChuanTheoNganh_Result>("DiemChuanTheoNganh", iD_NganhParameter);
        }
    }
}
